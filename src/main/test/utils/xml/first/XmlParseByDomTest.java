package main.test.utils.xml.first;

import java.io.ByteArrayInputStream;
import java.io.RandomAccessFile;
import java.lang.reflect.Method;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.apache.commons.lang.StringUtils;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

import main.test.utils.JsonUtil;


public class XmlParseByDomTest {


//    @Test
    public void dom() {

        RandomAccessFile accessFile = null;
        try {
            accessFile = new RandomAccessFile("D:/test.xml", "r");
            accessFile.seek(0);
            byte[] b = new byte[(int) accessFile.length()];
            accessFile.readFully(b);
            System.out.println(new String(b));
            Root r = xmlToBean(new String(b), Root.class);
            System.out.println(JsonUtil.objectToJsonString(r));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void dom2() {

        String xml = "<root>  <object name=\"sys\">    <field name=\"pckgsq\" value=\"\"/>    <field name=\"erorcd\" value=\"AAAAAAAAAA\"/>    <field name=\"erortx\" value=\"\"/>  </object>  <object name=\"comm_res\">    <array name=\"cjsfsvrlst\" length=\"0\"/>    <field name=\"dyinxinx\" value=\"\"/>    <field name=\"ercdxinx\" value=\"\"/>    <field name=\"f55yxinx\" value=\"\"/>    <field name=\"feiyqrbz\" value=\"0\"/>    <field name=\"hejijine\" value=\"\"/>    <field name=\"jgaoxinx\" value=\"\"/>    <field name=\"jiaoyigy\" value=\"000030\"/>    <field name=\"jiaoyijg\" value=\"000001\"/>    <field name=\"jiaoyils\" value=\"029000000033\"/>    <field name=\"jiaoyirq\" value=\"\"/>    <field name=\"jiaoyisj\" value=\"\"/>    <field name=\"kuaijirq\" value=\"20180910\"/>    <field name=\"sacdxinx\" value=\"\"/>    <field name=\"shoqbzhi\" value=\"\"/>    <field name=\"shoqguiy\" value=\"\"/>    <field name=\"shoqjgjb\" value=\"\"/>    <field name=\"shoqjigo\" value=\"\"/>    <field name=\"shoqlius\" value=\"\"/>    <field name=\"shoqmima\" value=\"\"/>    <field name=\"shoqxinx\" value=\"\"/>    <field name=\"tishxinx\" value=\"\"/>    <field name=\"f55yxinx\" value=\"\"/>  </object>  <object name=\"output\">    <field name=\"chkresult\" value=\"00\"/>    <field name=\"issueoffice\" value=\"辽宁0\"/>    <field name=\"cardname\" value=\"董庆彿\"/>    <field name=\"cardid\" value=\"220221196001120655\"/>    <field name=\"cardphoto\" value=\"\"/>  </object>  <object name=\"printer\"/></root>";
        Root r = xmlToBean(xml, Root.class);
        System.out.println(JsonUtil.objectToJsonString(r));
    }

    public static <T> T xmlToBean(String xml, Class<T> clazz) {
        long start = System.currentTimeMillis();
        T root = null;
        try {
            root = clazz.newInstance();

            DocumentBuilderFactory factory = DocumentBuilderFactory
                .newInstance();
            DocumentBuilder builder;
            builder = factory.newDocumentBuilder();

            Document document = builder
                .parse(new ByteArrayInputStream(xml.getBytes())); // 得到代表整个文档的
            Element e = document.getDocumentElement();
            for (int j = 0; j < e.getElementsByTagName("object")
                .getLength(); j++) {
                Element objectEle = (Element) e.getElementsByTagName("object")
                    .item(j);
                String objectName = objectEle.getAttribute("name");
                if (StringUtils.isBlank(objectName)) {
                    continue;
                }
                Class<?> c = null;
                try {
                    objectName = upperCaseFirstChar(
                        underlineToHump(objectName));
                    c = Class.forName(
                        clazz.getPackage().getName() + "." + objectName);
                } catch (Exception e1) {
                    continue;
                }
                Object o = c.newInstance();
                if ("object".equals(objectEle.getNodeName())) {
                    for (int i = 0; i < objectEle.getElementsByTagName("field")
                        .getLength(); i++) {
                        Element field = (Element) objectEle
                            .getElementsByTagName("field").item(i);
                        String fName = field.getAttribute("name");
                        Method setMethod;
                        try {
                            setMethod = c.getMethod("set"
                                + upperCaseFirstChar(underlineToHump(fName)),
                                String.class);
                        } catch (Exception e1) {
                            continue;
                        }
                        if ("field".equals(field.getTagName())) {
                            setMethod.invoke(o, field.getAttribute("value"));
                        } else if ("array".equals(field.getTagName())) {
                            setMethod.invoke(o, field.getAttribute("length"));
                        }

                    }
                }
                Method rootSetMethod = clazz.getMethod("set" + objectName,
                    c);
                rootSetMethod.invoke(root, o);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("耗时：" + (System.currentTimeMillis() - start));
        return root;
    }

    private static String underlineToHump(String underlineFormat) {
        if (underlineFormat == null || underlineFormat.length() == 0) {
            return underlineFormat;
        }
        underlineFormat = underlineFormat.trim();
        StringBuilder result = new StringBuilder();
        String a[] = underlineFormat.split("_");
        for (String s : a) {
            if (result.length() == 0) {
                result.append(s.toLowerCase());
            } else {
                result.append(s.substring(0, 1).toUpperCase());
                result.append(s.substring(1).toLowerCase());
            }
        }
        return result.toString();
    }

    private static String upperCaseFirstChar(String str) {
        if (str == null || str.length() == 0) {
            return str;
        }
        return str.substring(0, 1).toUpperCase() + str.substring(1);
    }

    public static void main(String[] args) {
        System.out.println(underlineToHump("_w_sdf_"));
        System.out.println(underlineToHump("w_sdf_a"));
        System.out.println(upperCaseFirstChar("qwe"));
        System.out.println(upperCaseFirstChar("q"));
    }
}


class Root {

    private Sys sys;

    private CommRes commRes;

    private Output output;

    private Printer printer;

    public Sys getSys() {
        return sys;
    }

    public void setSys(Sys sys) {
        this.sys = sys;
    }

    public Output getOutput() {
        return output;
    }

    public void setOutput(Output output) {
        this.output = output;
    }

    public CommRes getCommRes() {
        return commRes;
    }

    public void setCommRes(CommRes commRes) {
        this.commRes = commRes;
    }

    public Printer getPrinter() {
        return printer;
    }

    public void setPrinter(Printer printer) {
        this.printer = printer;
    }
}

class Sys {
    private String pckgsq;
    private String erorcd;
    private String erortx;

    public String getPckgsq() {
        return pckgsq;
    }

    public void setPckgsq(String pckgsq) {
        this.pckgsq = pckgsq;
    }

    public String getErorcd() {
        return erorcd;
    }

    public void setErorcd(String erorcd) {
        this.erorcd = erorcd;
    }

    public String getErortx() {
        return erortx;
    }

    public void setErortx(String erortx) {
        this.erortx = erortx;
    }
}

class Output {
    private String chkresult;
    private String issueoffice;
    private String cardname;
    private String cardid;
    private String cardphoto;

    public String getChkresult() {
        return chkresult;
    }

    public void setChkresult(String chkresult) {
        this.chkresult = chkresult;
    }

    public String getIssueoffice() {
        return issueoffice;
    }

    public void setIssueoffice(String issueoffice) {
        this.issueoffice = issueoffice;
    }

    public String getCardname() {
        return cardname;
    }

    public void setCardname(String cardname) {
        this.cardname = cardname;
    }

    public String getCardid() {
        return cardid;
    }

    public void setCardid(String cardid) {
        this.cardid = cardid;
    }

    public String getCardphoto() {
        return cardphoto;
    }

    public void setCardphoto(String cardphoto) {
        this.cardphoto = cardphoto;
    }

}

class CommRes {
    private String cjsfsvrlst;
    private String dyinxinx;
    private String ercdxinx;
    private String f55yxinx;
    private String feiyqrbz;

    public String getCjsfsvrlst() {
        return cjsfsvrlst;
    }

    public void setCjsfsvrlst(String cjsfsvrlst) {
        this.cjsfsvrlst = cjsfsvrlst;
    }

    public String getDyinxinx() {
        return dyinxinx;
    }

    public void setDyinxinx(String dyinxinx) {
        this.dyinxinx = dyinxinx;
    }

    public String getErcdxinx() {
        return ercdxinx;
    }

    public void setErcdxinx(String ercdxinx) {
        this.ercdxinx = ercdxinx;
    }

    public String getF55yxinx() {
        return f55yxinx;
    }

    public void setF55yxinx(String f55yxinx) {
        this.f55yxinx = f55yxinx;
    }

    public String getFeiyqrbz() {
        return feiyqrbz;
    }

    public void setFeiyqrbz(String feiyqrbz) {
        this.feiyqrbz = feiyqrbz;
    }
}

class Printer {

}
